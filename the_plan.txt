In that repository I'm going to solve as many quadratic formulas I can in the fastet time I can.
I'm going to do that in a pretty odd way, to make myself learn and use the next techs:

1. queues (activemq)
2. cache (redis)
3. fast serialization. Will start with regular, json serializaion, and improve to Google's
Protobug.
4. Few micro services, in different languages. I think it will be C#, Java, python, go and
maybe javascript. Each service will do something different that is in charge of the flow
of the calculations.
5. Benchmarks. I am going to measure myself in each of the parts of that application. That way
I can observe how each of improvement is making a difference.
6. Each component will have UTs, in case UT will fail, build (of the component) will fail.
7. E2E test - Be able to understand if full cycle is broken or not.


1. Create main flow of the application.
2. Created python program which reads a csv file with equations, and preparing json messages for each equations.

TODOS:
Python:
    1. Send message to the next application from the python application.
  V 2. UTs.
  V 3. Use logger.
    4. Add time measurement.
    5. For next phase - reduce iterations.
    6. Use yield return on foreachs before send.
	
Java:
  V 1. Use Class Injection (used Spring beans).
    2. Send message to the next application from the Java application.
  V 3. UTs.
  V 4. Use logger.
  V 5. Add time measurement.
    6. Reduce calcualtion time from CreateNumberFromCharactersGroup method.

Javascript:
    1. Send message to the next application from the Javascript application.
  V 2. UTs.
  V 3. Use logger.
  V 4. Add time measurement.

C#:
    1. Send message to the next application from the C# application.
  V 2. UTs.
  V 3. Use logger.
  V 4. Add time measurement.
  V 5. Use redis (write it in the readme).
  V 6. Use Polly (write it in the readme).
  
Go:
  V 1. UTs.
  V 2. Print to CSV.
    3. Add time measurement.
    4. Use logger.

General:
Scan all repos and mark time wasting methods, and measure them, also should write them in report.